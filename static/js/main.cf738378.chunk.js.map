{"version":3,"sources":["App.js","components/DisplayComponent.js","components/KeypadComponent.js","reportWebVitals.js","index.js"],"names":["App","props","onClick","button","calculate","delete","clearDisplay","inputDot","inputPercent","setState","input","state","result","answ","parseFloat","eval","slice","includes","value","String","className","this","Component","Display","Keypad","name","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf738378.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Display from \"./components/DisplayComponent\";\nimport Keypad from \"./components/KeypadComponent\";\n\n//App is the parent component. this component will hold state and pass it to the display and keypad as props\n//the results that are displayed in the Display component will need to update as input changes. that will be set in state\n//set the features for the calculator\n//set calculate function for when = is pressed\n//store the operator in state so the app remembers which operation to complete when calculate() is run\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"0\",\n      input: \"\",\n    };\n  }\n\n  onClick = (button) => {\n    if (button === \"=\") {\n      this.calculate();\n    } else if (button === \"backspace\") {\n      this.delete();\n    } else if (button === \"clearAll\") {\n      this.clearDisplay();\n    } else if (button === \".\") {\n      this.inputDot();\n    } else if (button === \"%\") {\n      this.inputPercent();\n    } else {\n      this.setState({\n        input: this.state.input + button,\n      });\n    }\n  };\n\n  clearDisplay = () => {\n    this.setState({\n      result: \"0\",\n      input: \"\",\n    });\n  };\n\n  calculate = () => {\n    if (this.state.input) {\n      let answ = \"\";\n      parseFloat(this.state.input);\n      answ = eval(this.state.input);\n\n      this.setState({\n        result: answ,\n        input: answ,\n      });\n    }\n  };\n\n  delete = () => {\n    this.setState({\n      input: this.state.input.slice(0, -1),\n    });\n  };\n\n  inputDot = () => {\n    if (!this.state.input.includes(\".\")) {\n      this.setState({\n        input: this.state.input + \".\",\n      });\n    }\n  };\n\n  inputPercent = () => {\n    const value = parseFloat(this.state.input);\n    if (this.state.input) {\n      this.setState({\n        input: String(value / 100),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calcBody\">\n          <header className=\"App-header\">\n            <p>Calculator</p>\n          </header>\n          <Display input={this.state.input} result={this.state.result} />\n          <Keypad onClick={this.onClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n\n//display the results\n//will update as the input changes\n//state is changing\n//display isn't holding the state. it will receive the state from the input as props to display\n\nclass Display extends Component {\n  render() {\n    return (\n      <div className=\"display\">\n        <p className=\"result\">{this.props.result}</p>\n        <p className=\"input\">{this.props.input}</p>\n      </div>\n    );\n  }\n}\n\nexport default Display;\n","import React, { Component } from \"react\";\n\n//each button needs an onClick property and function\n//App will hold the state. this component has props\n//CE will clear everything. reset state to \" \"\n\nclass Keypad extends Component {\n  render() {\n    return (\n      <div className=\"button\">\n        <button\n          name=\"clearAll\"\n          onClick={(e) => this.props.onClick(e.target.name)}\n        >\n          CE\n        </button>\n        <button name=\"%\" onClick={(e) => this.props.onClick(e.target.name)}>\n          %\n        </button>\n        <button>~</button>\n        <button\n          name=\"backspace\"\n          onClick={(e) => this.props.onClick(e.target.name)}\n        >\n          C\n        </button>\n        <br />\n        <button name=\"1\" onClick={(e) => this.props.onClick(e.target.name)}>\n          1\n        </button>\n        <button name=\"2\" onClick={(e) => this.props.onClick(e.target.name)}>\n          2\n        </button>\n        <button name=\"3\" onClick={(e) => this.props.onClick(e.target.name)}>\n          3\n        </button>\n        <button\n          className=\"operator\"\n          name=\"operator\"\n          onClick={(e) => this.props.onClick(\"+\")}\n        >\n          +\n        </button>\n        <br />\n        <button name=\"4\" onClick={(e) => this.props.onClick(e.target.name)}>\n          4\n        </button>\n        <button name=\"5\" onClick={(e) => this.props.onClick(e.target.name)}>\n          5\n        </button>\n        <button name=\"6\" onClick={(e) => this.props.onClick(e.target.name)}>\n          6\n        </button>\n        <button\n          className=\"operator\"\n          name=\"-\"\n          onClick={(e) => this.props.onClick(e.target.name)}\n        >\n          -\n        </button>\n        <br />\n        <button name=\"7\" onClick={(e) => this.props.onClick(e.target.name)}>\n          7\n        </button>\n        <button name=\"8\" onClick={(e) => this.props.onClick(e.target.name)}>\n          8\n        </button>\n        <button name=\"9\" onClick={(e) => this.props.onClick(e.target.name)}>\n          9\n        </button>\n        <button\n          className=\"operator\"\n          name=\"*\"\n          onClick={(e) => this.props.onClick(e.target.name)}\n        >\n          x\n        </button>\n        <br />\n        <button name=\".\" onClick={(e) => this.props.onClick(e.target.name)}>\n          .\n        </button>\n        <button name=\"0\" onClick={(e) => this.props.onClick(e.target.name)}>\n          0\n        </button>\n        <button\n          className=\"operator\"\n          name=\"=\"\n          onClick={(e) => this.props.onClick(e.target.name)}\n        >\n          =\n        </button>\n        <button name=\"/\" onClick={(e) => this.props.onClick(e.target.name)}>\n          /\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Keypad;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}